#                      colorpal = pal_share_nuuk,
#                      breakvals = c(0, 0.10, 0.20, 0.40, 0.60, 0.80, 1),
#                      breaknames = c("<0.1", "0.1-0.2", "0.2-0.4","0.4-0.6","0.6-0.8", ">0.8")))
(plt_percent_gl_should_decline <-
create_index_map(r_index = r_how_many_percent_gl_should_decline_0toNA,
tocrs = "ESRI:54030",
index_main_title = "How much grazing lands area should decline (to make space for crops)",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(0, 10, 20, 60, 80, 100, Inf),
breaknames = c("<10", "10-20", "20-60", "60-80", "80-100", ">100")))
#--------------------------------------------------------------- sama kasveille
fraction_cl_increases <- fraction_gl_declines # same as   r_fraction_SIover75_max - r_fraction_cl_NAto0
#fraction_cl_increases_masked_to_cl <- mask(fraction_cl_increases, r_fraction_cl) # this is probably not needed!
# Kuinka monta % enemmän viljaa voitaisiin tuottaa ---------- laskettu yllä ---- miksi maskattu vain cl alueille? Voi kai laajentua niiden ulkopuolelle
# cl area can increase in areas outside current cl areas, hoiwever, we don't know what would be the crop yield there
## therefore concentrate only on current cl areas for now ---- !! use average crops yields outside those areas
r_how_many_percent_cl_should_increase <-
100*(fraction_cl_increases) / r_fraction_cl_NAto0
r_how_many_percent_cl_should_increase <- classify(r_how_many_percent_cl_should_increase, cbind(0,NA))
# this is bit different than above
(plt_percent_cl_should_increase <-
create_index_map(r_index = r_how_many_percent_cl_should_increase,
tocrs = "ESRI:54030",
index_main_title = "How much cropland area could increase (at the cost of grazing lands)",
index_label = "",
colorpal = pal_share_nuuk,
breakvals = c(0, 10, 20, 60, 80, 100, Inf),
breaknames = c("<10", "10-20", "20-60", "60-80", "80-100", ">100")))
# Crop production raster
# r_global_prod_crops_mt <- here("Data", "Intermediate_input","production_raster_of_21_spamcrops.tif") %>%
#   rast() # WHEA RICE   upd 14.2.2023
#
# r_protein_from_AGB_kg_ha <- here("Data", "Intermediate_input","r_protein_from_AGB_kg_ha.tif")%>% rast() # upd 14.2.2023
# # per ha
# r_prot_allcrops_sum_kg_ha <- here("Delete", "r_prot_allcrops_sum_kg_ha.tif") %>% rast()
# r_animalprot_fromAGB_kg_ha <- here("Delete", "r_animalprot_fromAGB_kg_ha.tif") %>% rast()
# ---------------------------------------------------- calculate per pixel
r_protein_combined_kg_perpix_when_dairy <-
app(c(1000 * r_prot_allcrops_sum_mt_perpix, r_protein_from_AGB_kg_perpix$dairy),
fun = sum, na.rm = T) # must use app as gl and cl not overlapping. Alternatively:
# r_protein_combined_kg_perpix_when_dairy2 <-
#   1000 * classify(r_prot_allcrops_sum_mt_perpix, cbind(NA, 0)) +
#   classify( r_protein_from_AGB_kg_perpix$dairy, cbind(NA, 0))
r_protein_combined_kg_perpix_when_beef <-
app(c(1000 * r_prot_allcrops_sum_mt_perpix, r_protein_from_AGB_kg_perpix$beef),
fun = sum, na.rm = T)
r_protein_combined_kg_perpix_when_sheepgoats <-
app(c(1000 * r_prot_allcrops_sum_mt_perpix, r_protein_from_AGB_kg_perpix$sheep_and_goats),
fun = sum, na.rm = T)
r_protein_combined_kg_perpix <-
c(r_protein_combined_kg_perpix_when_dairy,
r_protein_combined_kg_perpix_when_beef,
r_protein_combined_kg_perpix_when_sheepgoats)
names(r_protein_combined_kg_perpix) <- c("when Dairy cattle", "when Beef cattle", "when Sheep and goats")
## per ha ----- not best way to do this
# r_protein_combined_kg_ha_when_dairy <-
#   app(c(r_prot_allcrops_sum_kg_ha,
#         r_protein_from_AGB_kg_ha$dairy), # stack rasters, was average
#            fun = sum, na.rm = T) # why not  r_prot_allcrops_sum_kg_ha + r_protein_from_AGB_kg_ha$dairy ---> because NA values (areas now overlapping)
#
#
# r_protein_combined_kg_ha_when_beef <-
#   app(c(r_prot_allcrops_sum_kg_ha,
#         r_protein_from_AGB_kg_ha$beef),
#            fun = sum, na.rm = T)
#
#
#
# r_protein_combined_kg_ha_when_sheepgoats <-
#   app(c(r_prot_allcrops_sum_kg_ha,
#         r_protein_from_AGB_kg_ha$sheep_and_goats),
#            fun = sum, na.rm = T)
#
#
# r_protein_combined_kg_ha <-
#   c(r_protein_combined_kg_ha_when_dairy,
#     r_protein_combined_kg_ha_when_beef,
#     r_protein_combined_kg_ha_when_sheepgoats)
# names(r_protein_combined_kg_ha) <- c("when Dairy cattle", "when Beef cattle", "when Sheep and goats")
#
# plot(r_protein_combined_kg_ha, range = c(0,600), main = "Combined protein per ha")
# plot(r_protein_from_AGB_kg_ha$dairy, main = "dairy prot")
# share of the total protein that originates from crops -- updated so that calculated from perpix values
## first convert NA to 0
r_prot_allcrops_sum_kg_perpix_NAto0 <- classify(r_prot_allcrops_sum_mt_perpix, cbind(NA, 0))
r_share_of_total_protein_crops <- 100* (r_prot_allcrops_sum_kg_perpix_NAto0 / r_protein_combined_kg_perpix) # old calculated per ha
plot(r_share_of_total_protein_crops)
# share of the total protein that originates from livestock
## first convert NA to 0
r_protein_from_AGB_kg_perpix_NAto0 <- classify(r_protein_from_AGB_kg_perpix, cbind(NA, 0))
r_share_of_total_protein_livestock <- 100* (r_protein_from_AGB_kg_perpix_NAto0 / r_protein_combined_kg_perpix)
plot(r_share_of_total_protein_livestock)
## test
mean(r_share_of_total_protein_livestock + r_share_of_total_protein_crops) # should be 100
## cropland mask (share of livestock masked to croplands to show that on cropland areas livestock produce only a little)
r_share_of_total_protein_livestock_croplandmask <-
mask(r_share_of_total_protein_livestock,
r_global_production_crops_sum_mt)
plot(r_share_of_total_protein_livestock_croplandmask)
## SI below 10 mask AND croplandmask
SI_5arcmin <- here("Data", "Input", "from_harddrive", "SI_v3.0_5arcmin.tif") %>%
rast()
SI_5arcmin_below10 <- SI_5arcmin
SI_5arcmin_below10[SI_5arcmin_below10 >= 10] <- NA
plot(SI_5arcmin_below10, main = "SI below 10")
SI_5arcmin_below10_croplandmask <-
mask(SI_5arcmin_below10, r_global_production_crops_sum_mt)
plot(SI_5arcmin_below10_croplandmask, main = "SI below 10 on croplands")
r_share_of_total_protein_livestock_SIbelow10mask_croplandmask <-
mask(r_share_of_total_protein_livestock, SI_5arcmin_below10_croplandmask)
names(r_share_of_total_protein_livestock_SIbelow10mask_croplandmask) <-
names(r_share_of_total_protein_livestock)
plot(r_share_of_total_protein_livestock_SIbelow10mask_croplandmask,
main = "share of liv of tot protein on croplands where si < 10")
## livestock protein on croplands
r_protein_from_AGB_kg_perpix_croplandmask <-
mask(r_protein_from_AGB_kg_perpix,
r_global_production_crops_sum_mt)
plot(r_protein_from_AGB_kg_perpix_croplandmask)
## livestock protein on croplands where SI < 10
r_protein_from_AGB_kg_perpix_SIbelow10mask_croplandmask <-
mask(r_protein_from_AGB_kg_perpix,
SI_5arcmin_below10_croplandmask)
plot(r_protein_from_AGB_kg_perpix_SIbelow10mask_croplandmask)
## sums
global(r_protein_from_AGB_kg_perpix_croplandmask, fun = "sum", na.rm = T)/1e9 # dairy 29 mmt, beef 7, sheepgoat 7 average 9
global(r_protein_from_AGB_kg_perpix_SIbelow10mask_croplandmask, fun = "sum", na.rm = T)/1e9 # dairy 1.6mmt, beef 0.4, sheepgoat 0.4 average 0.5
fraction_gl_declines_masked_to_gl
r_fraction_gl_0toNA <- classify(r_fraction_gl, cbind(0,NA)) # not sure if needed
r_fraction_cl_0toNA <- classify(r_fraction_cl, cbind(0,NA))
# ------------------------------------------------------ optimized livestock
# gl area cna decrease only in areas where there is some gl. Therefore mask to areas where there is gl (masking could be done later as well)
r_optimized_protein_yield_livestock_kg_perpix <- # check the a4 notebook for this
((r_fraction_gl_0toNA - fraction_gl_declines_masked_to_gl) / r_fraction_gl_0toNA) * # if this row gets value = 1, then no changes
r_protein_from_AGB_kg_perpix
names(r_optimized_protein_yield_livestock_kg_perpix) <-
names(r_protein_from_AGB_kg_perpix)
global(r_optimized_protein_yield_livestock_kg_perpix, "sum", na.rm = T)/1e9 # 44 mmt, 9 mmt, 9 mmt --> was 49, 11 and 11 so not much diff
r_optimized_protein_yield_livestock_kg_perpix
global(r_optimized_protein_yield_livestock_kg_perpix, "sum", na.rm = T)/1e9
f_global_sum_without_outliers(r_optimized_protein_yield_livestock_kg_perpix$dairy)/1e9
f_global_sum_without_outliers(r_optimized_protein_yield_livestock_kg_perpix$dairy)/1e9
f_global_sum_without_outliers(r_optimized_protein_yield_livestock_kg_perpix$beef)/1e9
f_global_sum_without_outliers(r_optimized_protein_yield_livestock_kg_perpix$sheep_and_goats)/1e9
# ------------------------------------------------------ optimized crops
# cl area can increase in areas outside current cl areas, hoiwever, we don't know what would be the crop yield there
## therefore concentrate only on current cl areas for now ---> or use median protein yields?
protein_yield_crops_median_kg_ha_actual <- median(values(r_protein_allcrops_sum_kg_ha), na.rm = T)
r_prot_allcrops_sum_kg_ha
# ------------------------------------------------------ optimized crops
# cl area can increase in areas outside current cl areas, hoiwever, we don't know what would be the crop yield there
## therefore concentrate only on current cl areas for now ---> or use median protein yields?
protein_yield_crops_median_kg_ha_actual <- median(values(r_prot_allcrops_sum_kg_ha), na.rm = T)
protein_yield_crops_median_kg_ha_actual
r_optimized_protein_yield_crops_mt_perpix <-
((r_fraction_cl_NAto0 + fraction_gl_declines) / r_fraction_cl_NAto0) *
# was r_fraction_cl_0toNA but optimized yields can locate outside current cl if there is gl
# if r_fraction_cl_NAto0 = 0, but fraction_gl_declines > 0, then there can be fraction_gl_declines * r_prot_allcrops_sum_mt_perpix of new production in a cell
r_prot_allcrops_sum_mt_perpix
names(r_optimized_protein_yield_crops_mt_perpix) <- "crop_protein_mt"
r_optimized_protein_yield_crops_mt_perpix
f_global_sum_without_outliers(r_optimized_protein_yield_crops_mt_perpix)/1e6
r_optimized_protein_yield_crops_mt_perpix <-
((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) *
# was r_fraction_cl_0toNA but optimized yields can locate outside current cl if there is gl
# if r_fraction_cl_NAto0 = 0, but fraction_gl_declines > 0, then there can be fraction_gl_declines * r_prot_allcrops_sum_mt_perpix of new production in a cell
r_prot_allcrops_sum_mt_perpix
names(r_optimized_protein_yield_crops_mt_perpix) <- "crop_protein_mt"
global(r_optimized_protein_yield_crops_mt_perpix, "sum", na.rm = T)/1e6 # 470 mmt
global(r_optimized_protein_yield_crops_mt_perpix, "sum", na.rm = T)/1e6 # 470 mmt
f_global_sum_without_outliers(r_optimized_protein_yield_crops_mt_perpix)/1e6 # 298
# test
mask(fraction_gl_declines_masked_to_gl, r_fraction_cl_0toNA, inverse = T) %>%
plot(., main = "there are areas outside cl where crop prod could increase")
# ------------------------------------------------- compare original yield to optimized yield
r_original_protein_yield_combined_kg_perpix <-
r_protein_from_AGB_kg_perpix +
1000 * r_prot_allcrops_sum_mt_perpix
r_optimized_protein_yield_combined_kg_perpix <-
r_optimized_protein_yield_livestock_kg_perpix +
1000*r_optimized_protein_yield_crops_mt_perpix
r_optimized_protein_yield_larger <-
100*(r_optimized_protein_yield_combined_kg_perpix - r_original_protein_yield_combined_kg_perpix)/
r_original_protein_yield_combined_kg_perpix
# r_original_protein_yield_combined_kg_perpix_trim <-
#   r_protein_from_AGB_kg_perpix_trim +
#   1000 * r_prot_allcrops_sum_mt_perpix_trim
#
# global(r_original_protein_yield_combined_kg_perpix_trim, "sum", na.rm = T)/1e9  # 251 236 236 trimmed sums
#
# r_optimized_protein_yield_combined_kg_perpix_trim <-
#    r_optimized_protein_yield_livestock_kg_perpix_trim +
#    1000*r_optimized_protein_yield_crops_mt_perpix_trim
#
# global(r_optimized_protein_yield_combined_kg_perpix_trim, "sum", na.rm = T)/1e9 # 305 mmt, 294 mmt and 294 mmt
(plt_r_optimized_protein_yield_larger <-
create_index_map(r_index = r_optimized_protein_yield_larger$dairy,
tocrs = "ESRI:54030",
index_main_title = "Optimised protein production compared to original combined protein production \n (here dairy + crops considered)",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(-Inf, 1, 20, 50, 1000, Inf),
breaknames = c("No change", "<20", "20-50", "50-100", ">100")))
r_optimized_protein_yield_larger
summary(r_optimized_protein_yield_larger$dairy)
kok <- mask(fraction_gl_declines_masked_to_gl, r_fraction_cl_0toNA, inverse = T)
summary(kok)
hist(koik)
hist(kok)
kok <- classify/kok, cbind(0,NA)
kok <- classify(kok, cbind(0,NA))
summary(kok)
hist(kok)
# ------------------------------------------------------ optimized crops
# cl area can increase in areas outside current cl areas, hoiwever, we don't know what would be the crop yield there
## therefore concentrate only on current cl areas for now ---> or use median protein yields?
protein_yield_crops_median_kg_ha <- median(values(r_prot_allcrops_sum_kg_ha), na.rm = T) # 216
cellSize(fraction_gl_declines_masked_to_gl, unit = "ha")
summary(values(cellSize(fraction_gl_declines_masked_to_gl, unit = "ha")))
216*0.05*7100
r_fraction_cl_NAto0 = 0
r_fraction_cl_NAto0 <- classify(r_fraction_cl, cbind(NA,0))
koo <- r_fraction_cl_NAto0
koo == 0
plot(koo == 0)
r_optimized_protein_yield_crops_mt_perpix <-
((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) *
# was r_fraction_cl_0toNA but optimized yields can locate outside current cl if there is gl
# if r_fraction_cl_NAto0 = 0, but fraction_gl_declines > 0, then there can be fraction_gl_declines * r_prot_allcrops_sum_mt_perpix of new production in a cell
r_prot_allcrops_sum_mt_perpix
names(r_optimized_protein_yield_crops_mt_perpix) <- "crop_protein_mt"
kok <- ifel(test = r_fraction_cl_NAto0 == 0  &  fraction_gl_declines > 0,
yes = protein_yield_crops_median_kg_ha * fraction_gl_declines_masked_to_gl * cellSize(fraction_gl_declines_masked_to_gl, unit = "ha"),
no = ((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) * r_prot_allcrops_sum_mt_perpix
)
# jos tämän maskaa cl alueille, pitäisi olla sama kuin aiemmin laskettu
kok
r_optimized_protein_yield_crops_mt_perpix
plot(kok); plot(r_optimized_protein_yield_crops_mt_perpix)
plot(r_optimized_protein_yield_crops_mt_perpix)
plot(r_prot_allcrops_sum_mt_perpix)
# jos tämän maskaa cl alueille, pitäisi olla sama kuin aiemmin laskettu
quantile(values(kok), probs = 0.95, na.rm = T)
quantile(values(r_optimized_protein_yield_crops_mt_perpix), probs = 0.95, na.rm = T) # 3554.964
kok2 <- ifel(kok > 3554.964, NA, kok)
summary(kok2)
r_optimized_protein_yield_crops_mt_perpix2 <-
ifel(r_optimized_protein_yield_crops_mt_perpix > 3554.964, NA, r_optimized_protein_yield_crops_mt_perpix)
plot(kok2)
plot(r_optimized_protein_yield_crops_mt_perpix2)
plot(kok2, main = "should be areas outside cl areas")
plot(r_optimized_protein_yield_crops_mt_perpix2, main = "no areas outside cl")
plot(mask(fraction_gl_declines_masked_to_gl, r_fraction_cl_0toNA, inverse = T)
)
kok <- ifel(test = r_fraction_cl_NAto0 == 0  &  fraction_gl_declines_masked_to_gl > 0,
yes = protein_yield_crops_median_kg_ha * fraction_gl_declines_masked_to_gl * cellSize(fraction_gl_declines_masked_to_gl, unit = "ha"),
no = ((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) * r_prot_allcrops_sum_mt_perpix
)
# jos tämän maskaa cl alueille, pitäisi olla sama kuin aiemmin laskettu
quantile(values(kok), probs = 0.95, na.rm = T) # 3554.964
quantile(values(r_optimized_protein_yield_crops_mt_perpix), probs = 0.95, na.rm = T) # 1967.899
kok2 <- ifel(kok > 3554.964, NA, kok)
r_optimized_protein_yield_crops_mt_perpix2 <-
ifel(r_optimized_protein_yield_crops_mt_perpix > 3554.964, NA, r_optimized_protein_yield_crops_mt_perpix)
plot(kok2, main = "should be areas outside cl areas")
plot(r_optimized_protein_yield_crops_mt_perpix2, main = "no areas outside cl")
kok2
r_fraction_gl_0toNA <- classify(r_fraction_gl, cbind(0,NA)) # not sure if needed
r_fraction_cl_0toNA <- classify(r_fraction_cl, cbind(0,NA))
# ------------------------------------------------------ optimized livestock
# gl area cna decrease only in areas where there is some gl. Therefore mask to areas where there is gl (masking could be done later as well)
r_optimized_protein_yield_livestock_kg_perpix <- # check the a4 notebook for this
((r_fraction_gl_0toNA - fraction_gl_declines_masked_to_gl) / r_fraction_gl_0toNA) * # if this row gets value = 1, then no changes
r_protein_from_AGB_kg_perpix
names(r_optimized_protein_yield_livestock_kg_perpix) <-
names(r_protein_from_AGB_kg_perpix)
# ! calculate somewhere how much livestock produced protein decreases in grid cell !! ! !
global(r_optimized_protein_yield_livestock_kg_perpix, "sum", na.rm = T)/1e9 # 44 mmt, 9 mmt, 9 mmt --> was 49, 11 and 11 so not much diff
f_global_sum_without_outliers(r_optimized_protein_yield_livestock_kg_perpix$dairy)/1e9 # 36 8 8
# ------------------------------------------------------ optimized crops
# cl area can increase in areas outside current cl areas, hoiwever, we don't know what would be the crop yield there
## therefore concentrate only on current cl areas for now ---> or use median protein yields?
protein_yield_crops_median_kg_ha <- median(values(r_prot_allcrops_sum_kg_ha), na.rm = T) # 216
r_optimized_protein_yield_crops_mt_perpix <-
((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) *
# was r_fraction_cl_0toNA but optimized yields can locate outside current cl if there is gl
# if r_fraction_cl_NAto0 = 0, but fraction_gl_declines > 0, then there can be fraction_gl_declines * r_prot_allcrops_sum_mt_perpix of new production in a cell
r_prot_allcrops_sum_mt_perpix
names(r_optimized_protein_yield_crops_mt_perpix) <- "crop_protein_mt"
global(r_optimized_protein_yield_crops_mt_perpix, "sum", na.rm = T)/1e6 # Inf or 470 mmt
f_global_sum_without_outliers(r_optimized_protein_yield_crops_mt_perpix)/1e6 # 295
# outliers need to be removed from r_optimized_protein_yield_crops_mt_perpix before plotting?
# test
mask(fraction_gl_declines_masked_to_gl, r_fraction_cl_0toNA, inverse = T) %>%
plot(., main = "there are areas outside cl where crop prod could increase")
# ------------------------------------------------- compare original yield to optimized yield
r_original_protein_yield_combined_kg_perpix <-
r_protein_from_AGB_kg_perpix +
1000 * r_prot_allcrops_sum_mt_perpix
r_optimized_protein_yield_combined_kg_perpix <-
r_optimized_protein_yield_livestock_kg_perpix +
1000*r_optimized_protein_yield_crops_mt_perpix
r_optimized_protein_yield_larger <-
100*(r_optimized_protein_yield_combined_kg_perpix - r_original_protein_yield_combined_kg_perpix)/
r_original_protein_yield_combined_kg_perpix
# r_original_protein_yield_combined_kg_perpix_trim <-
#   r_protein_from_AGB_kg_perpix_trim +
#   1000 * r_prot_allcrops_sum_mt_perpix_trim
#
# global(r_original_protein_yield_combined_kg_perpix_trim, "sum", na.rm = T)/1e9  # 251 236 236 trimmed sums
#
# r_optimized_protein_yield_combined_kg_perpix_trim <-
#    r_optimized_protein_yield_livestock_kg_perpix_trim +
#    1000*r_optimized_protein_yield_crops_mt_perpix_trim
#
# global(r_optimized_protein_yield_combined_kg_perpix_trim, "sum", na.rm = T)/1e9 # 305 mmt, 294 mmt and 294 mmt
(plt_r_optimized_protein_yield_larger <-
create_index_map(r_index = r_optimized_protein_yield_larger$dairy,
tocrs = "ESRI:54030",
index_main_title = "Optimised protein production compared to original combined protein production \n (here dairy + crops considered)",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(-Inf, 1, 20, 50, 1000, Inf),
breaknames = c("No change", "<20", "20-50", "50-100", ">100")))
(plt_r_optimized_protein_yield_larger <-
create_index_map(r_index = r_optimized_protein_yield_larger$dairy,
tocrs = "ESRI:54030",
index_main_title = "Optimised protein production compared to original combined protein production \n (here dairy + crops considered)",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(-Inf, 1, 20, 50, 1000, Inf),
breaknames = c("No change", "<20", "20-50", "50-100", ">100")))
# ----------------------------------------------------------------- find areas outside cl areas where cl could grow!
uusialue_cl <- mask(fraction_gl_declines_masked_to_gl, r_fraction_cl_0toNA, inverse = T)
uusialue_cl
plot(uusialue_cl)
plot(crop(uusialue_cl, ext(50,100,25,60)))
plot(crop(uusialue_cl, ext(50,100,35,50)))
plot(crop(r_fraction_cl_0toNA, ext(50,100,35,50)))
plot(crop(uusialue_cl, ext(50,100,35,50))) # suuria alueita joissa on very suitable alueita gl alueilla (ja cl ulkopuolella)
plot(crop(r_fraction_cl_0toNA, ext(50,100,35,50)))
uusialue_cl <- classify(uusialue_cl, cbind(0,NA))
plot(crop(uusialue_cl, ext(50,100,35,50))) # suuria alueita joissa on very suitable alueita gl alueilla (ja cl ulkopuolella)
plot(crop(r_fraction_cl_0toNA, ext(50,100,35,50)))
plot(crop(kok, ext(50,100,35,50)))
plot(crop(r_optimized_protein_yield_crops_mt_perpix, ext(50,100,35,50))) # näillä alueilla on proteiinia kok mukaan
plot(crop(kok2, ext(50,100,35,50))) # näillä alueilla on proteiinia kok mukaan
summary(kok)
summary(kok2)
kok <- ifel(test = r_fraction_cl_NAto0 == 0  &  fraction_gl_declines_masked_to_gl > 0,
yes = (protein_yield_crops_median_kg_ha/1000) * fraction_gl_declines_masked_to_gl * cellSize(fraction_gl_declines_masked_to_gl, unit = "ha"),
no = ((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) * r_prot_allcrops_sum_mt_perpix
)
# jos tämän maskaa cl alueille, pitäisi olla sama kuin aiemmin laskettu
quantile(values(kok), probs = 0.95, na.rm = T) # 3554.964
quantile(values(r_optimized_protein_yield_crops_mt_perpix), probs = 0.95, na.rm = T) # 1967.899
kok2 <- ifel(kok > 1863.022, NA, kok)
r_optimized_protein_yield_crops_mt_perpix2 <-
ifel(r_optimized_protein_yield_crops_mt_perpix > 1863.022, NA, r_optimized_protein_yield_crops_mt_perpix)
plot(crop(kok, ext(50,100,35,50))) # näillä alueilla on proteiinia kok mukaan
plot(crop(r_optimized_protein_yield_crops_mt_perpix, ext(50,100,35,50))) # mutta alk peräisen laskun mukaan ei ole
plot(crop(kok2, ext(50,100,35,50))) # ei myöskään kok2 mukaan josta suuret arvot poistettu
plot(crop(r_optimized_protein_yield_crops_mt_perpix, ext(50,100,35,50))) # mutta alk peräisen laskun mukaan ei ole
summary(r_optimized_protein_yield_crops_mt_perpix)
plot(crop(r_optimized_protein_yield_crops_mt_perpix2, ext(50,100,35,50))) # mutta alk peräisen laskun mukaan ei ole
global(kok2, "sum", na.rm =T)/1e6
global(kok, "sum", na.rm =T)/1e6
# jos tämän maskaa cl alueille, pitäisi olla sama kuin aiemmin laskettu
quantile(values(kok), probs = 0.99, na.rm = T) # 1863.022
kok2 <- ifel(kok > 3684.739 , NA, kok)
plot(crop(kok2, ext(50,100,35,50))) #  kok2 mukaan on (suuret arvot poistettu
global(kok, "sum", na.rm =T)/1e6
global(kok2, "sum", na.rm =T)/1e6
r_optimized_protein_yield_crops_mt_perpix <-
ifel(test = r_fraction_cl_NAto0 == 0  &  fraction_gl_declines_masked_to_gl > 0, # if there is possibility to expand cl on gl areas
yes = (protein_yield_crops_median_kg_ha/1000) * fraction_gl_declines_masked_to_gl * # approximate yield to these areas
cellSize(fraction_gl_declines_masked_to_gl, unit = "ha"),
no = ((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) * r_prot_allcrops_sum_mt_perpix) # if cl > 0, then simply calculate the potential production on these areas
names(r_optimized_protein_yield_crops_mt_perpix) <- "crop_protein_mt"
global(r_optimized_protein_yield_crops_mt_perpix, "sum", na.rm = T)/1e6 # Inf or 470 mmt
f_global_sum_without_outliers(r_optimized_protein_yield_crops_mt_perpix)/1e6 # 295
r_optimized_protein_yield_crops_mt_perpix
summary(r_optimized_protein_yield_crops_mt_perpix)
summary(r_prot_allcrops_sum_mt_perpix)
r_optimized_protein_yield_larger
r_fraction_gl_0toNA <- classify(r_fraction_gl, cbind(0,NA)) # not sure if needed
r_fraction_cl_0toNA <- classify(r_fraction_cl, cbind(0,NA))
# ------------------------------------------------------ optimized livestock
# gl area can decrease only in areas where there is some gl. Therefore mask to areas where there is gl
r_optimized_protein_yield_livestock_kg_perpix <- # check the a4 notebook for this
((r_fraction_gl_0toNA - fraction_gl_declines_masked_to_gl) / r_fraction_gl_0toNA) * # if this row gets value = 1, then no changes
r_protein_from_AGB_kg_perpix
names(r_optimized_protein_yield_livestock_kg_perpix) <-
names(r_protein_from_AGB_kg_perpix)
# ! calculate somewhere how much livestock produced protein decreases in grid cell !! ! !
global(r_optimized_protein_yield_livestock_kg_perpix, "sum", na.rm = T)/1e9 # 44 mmt, 9 mmt, 9 mmt --> was 49, 11 and 11 so not much diff
f_global_sum_without_outliers(r_optimized_protein_yield_livestock_kg_perpix$dairy)/1e9 # 36 8 8
# ------------------------------------------------------ optimized crops
# cl area can increase in areas outside current cl areas. We assume the median yield for the places where cl could expand.
# these areas can be found as follows: if r_fraction_cl_NAto0 == 0 but fraction_gl_declines_masked_to_gl > 0, there can be new cl.
# on these areas we use median yield to approximate potential yield
protein_yield_crops_median_kg_ha <- median(values(r_prot_allcrops_sum_kg_ha), na.rm = T) # 216
r_optimized_protein_yield_crops_mt_perpix <-
ifel(test = r_fraction_cl_NAto0 == 0  &  fraction_gl_declines_masked_to_gl > 0, # if there is possibility to expand cl on gl areas
yes = (protein_yield_crops_median_kg_ha/1000) * fraction_gl_declines_masked_to_gl * # approximate yield to these areas
cellSize(fraction_gl_declines_masked_to_gl, unit = "ha"),
no = ((r_fraction_cl_NAto0 + fraction_gl_declines_masked_to_gl) / r_fraction_cl_NAto0) * r_prot_allcrops_sum_mt_perpix) # if cl > 0, then simply calculate the potential production on these areas
names(r_optimized_protein_yield_crops_mt_perpix) <- "crop_protein_mt"
global(r_optimized_protein_yield_crops_mt_perpix, "sum", na.rm = T)/1e6 # 485 mmt
f_global_sum_without_outliers(r_optimized_protein_yield_crops_mt_perpix)/1e6 # 307
# outliers need to be removed from r_optimized_protein_yield_crops_mt_perpix before plotting?
# test
mask(fraction_gl_declines_masked_to_gl, r_fraction_cl_0toNA, inverse = T) %>%
plot(., main = "there are areas outside cl where crop prod could increase")
# ------------------------------------------------- compare original yield to optimized yield
r_original_protein_yield_combined_kg_perpix <-
r_protein_from_AGB_kg_perpix +
1000 * r_prot_allcrops_sum_mt_perpix
r_optimized_protein_yield_combined_kg_perpix <-
r_optimized_protein_yield_livestock_kg_perpix +
1000*r_optimized_protein_yield_crops_mt_perpix
r_optimized_protein_yield_larger <-
100*(r_optimized_protein_yield_combined_kg_perpix - r_original_protein_yield_combined_kg_perpix)/
r_original_protein_yield_combined_kg_perpix
# r_original_protein_yield_combined_kg_perpix_trim <-
#   r_protein_from_AGB_kg_perpix_trim +
#   1000 * r_prot_allcrops_sum_mt_perpix_trim
#
# global(r_original_protein_yield_combined_kg_perpix_trim, "sum", na.rm = T)/1e9  # 251 236 236 trimmed sums
#
# r_optimized_protein_yield_combined_kg_perpix_trim <-
#    r_optimized_protein_yield_livestock_kg_perpix_trim +
#    1000*r_optimized_protein_yield_crops_mt_perpix_trim
#
# global(r_optimized_protein_yield_combined_kg_perpix_trim, "sum", na.rm = T)/1e9 # 305 mmt, 294 mmt and 294 mmt
(plt_r_optimized_protein_yield_larger <-
create_index_map(r_index = r_optimized_protein_yield_larger,
tocrs = "ESRI:54030",
index_main_title = "Optimised protein production compared to original combined protein production",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(-Inf, 1, 20, 50, 1000, Inf),
breaknames = c("No change", "<20", "20-50", "50-100", ">100")))
(plt_r_optimized_protein_yield_larger <-
create_index_map(r_index = r_optimized_protein_yield_larger$dairy,
tocrs = "ESRI:54030",
index_main_title = "Optimised protein production compared to original combined protein production \n (here dairy + crops considered)",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(-Inf, 1, 20, 50, 1000, Inf),
breaknames = c("No change", "<20", "20-50", "50-100", ">100")))
pal_npp <- scico(n = 5,begin = 0.6, end = 1, palette = "corkO")
# scico(n = 6, palette = "bamako", direction = -1, begin = 0.5, end = 1)
pal_agb <- scico(n = 6, palette = "bamako", direction = -1)
# pal_protein <- scico(n = 10, palette = "hawaii", begin = 0.05,end = 0.85,
#                               direction = -1) # use lajolla instead!
pal_protein_lajolla <- scico(n = 6, palette = "lajolla", end = 0.85)
pal_fcr <- scico(n = 6, palette = "tokyo", direction = -1)
pal_cv <-  scico(n = 6, palette = "nuuk", direction = -1)
(plt_r_share_SIover75max <-
create_index_map(r_index = r_fraction_SIover75_max_0toNA*100, # updated so 0 areas are white
tocrs = "ESRI:54030",
index_main_title = "Share of very suitable land area that could be used for crop production",
index_label = "% of cell",
colorpal = pal_share_nuuk,
breakvals = c(0, 10, 20, 40, 60, 80, 100),
breaknames = c("<10", "10-20", "20-40", "40-60","60-80", "80-100")))
(plt_percent_gl_should_decline <-
create_index_map(r_index = r_how_many_percent_gl_should_decline_0toNA,
tocrs = "ESRI:54030",
index_main_title = "How much grazing lands area could decline (to make space for crops)",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(0, 10, 20, 60, 80, 100, Inf),
breaknames = c("<10", "10-20", "20-60", "60-80", "80-100", ">100")))
(plt_percent_cl_should_increase <-
create_index_map(r_index = r_how_many_percent_cl_should_increase,
tocrs = "ESRI:54030",
index_main_title = "How much cropland area could increase (at the cost of grazing lands)",
index_label = "",
colorpal = pal_share_nuuk,
breakvals = c(0, 10, 20, 60, 80, 100, Inf),
breaknames = c("<10", "10-20", "20-60", "60-80", "80-100", ">100")))
(plt_r_optimized_protein_yield_larger <-
create_index_map(r_index = r_optimized_protein_yield_larger$dairy,
tocrs = "ESRI:54030",
index_main_title = "Optimised protein production compared to original combined protein production \n (here dairy + crops considered)",
index_label = "%",
colorpal = pal_share_nuuk,
breakvals = c(-Inf, 1, 20, 50, 100, Inf),
breaknames = c("No change", "<20", "20-50", "50-100", ">100")))
plts_optimised <- tmap_arrange(
plt_r_share_SIover75max,
plt_percent_gl_should_decline,
plt_percent_cl_should_increase,
plt_r_optimized_protein_yield_larger
)
tmap_save(plts_optimised, here("Figures", "plts_optimised.pdf"))
r_original_protein_yield_combined_kg_perpix
f_global_sum_without_outliers(r_original_protein_yield_combined_kg_perpix$dairy)/1e6
f_global_sum_without_outliers(r_original_protein_yield_combined_kg_perpix$dairy)/1e9
f_global_sum_without_outliers(r_original_protein_yield_combined_kg_perpix$dairy)/1e9 # 258 dairy
f_global_sum_without_outliers(r_original_protein_yield_combined_kg_perpix$beef)/1e9 # 258 dairy
f_global_sum_without_outliers(r_original_protein_yield_combined_kg_perpix$sheep_and_goats)/1e9 # 258 dairy
r_optimized_protein_yield_combined_kg_perpix
f_global_sum_without_outliers(r_optimized_protein_yield_combined_kg_perpix$dairy)/1e9 # 258 dairy
f_global_sum_without_outliers(r_optimized_protein_yield_combined_kg_perpix$beef)/1e9 # 236 beef
f_global_sum_without_outliers(r_optimized_protein_yield_combined_kg_perpix$sheep_and_goats)/1e9 # 236 sheep goat
f_global_sum_without_outliers(r_optimized_protein_yield_combined_kg_perpix$dairy)/1e9 # 330 dairy
f_global_sum_without_outliers(r_original_protein_yield_combined_kg_perpix$dairy)/1e9 # 258 dairy
(329.6295-257.590)/257.590
