# Values when shift "no potential", "moderate potential", "high potential" and "very high potential"
no_pot <- 2 # 100% increase
med_pot <- 5 # 500% increase
high_pot <- 10 # very high is above this one
# per ha sadot nykyisillä ja uusilla alueilla
r_agb_prot_existing_plus_new_areas_kg_ha
r_crop_prot_existing_plus_new_areas_kg_ha
# Huom! --> tää ei oikea koska ei salli uutta grazing landia!
# global(r_optimized_grazing_protein_kg_perpix_positive$prot_kgpix_SI99, "sum", na.rm = T)/1e9 # 9.7 --> ei oikea koska proskua ei voi tulla tässä lisää
# -------------------------------------------------------------------- All to GL
# satopotentiaali per ha tiedetään. Oletetaan nyt, että kaikella maatalousmaalla voidaan tuottaa AGB perusteista protskua
# --> uusi sato = maatalousmaa * AGB protskua per ha
# --> vanhoilla gl alueilla uusi sato lisääntyy samassa suhteessa kuin agrland määrä. Uusilla arvioitu GAEZ perusteella
r_agb_prot_when_alltoGL_kg_perpix <-
r_agb_prot_existing_plus_new_areas_kg_ha *
cellSize(r_agb_prot_existing_plus_new_areas_kg_ha, unit = "ha") *
r_fraction_gl_cl_total_0toNA
ifel(r_agb_prot_when_alltoGL_kg_perpix > 0, 1, NA) |> plot()
global(r_agb_prot_when_alltoGL_kg_perpix, "sum", na.rm=T)/1e9 # 13.32 mmt protein (37% larger than existing)
# -------------------------------------------------------------------- All to CL
r_crop_prot_when_alltoCL_kg_perpix <-
r_crop_prot_existing_plus_new_areas_kg_ha *
cellSize(r_crop_prot_existing_plus_new_areas_kg_ha, unit = "ha") *
r_fraction_gl_cl_total_0toNA
ifel(r_crop_prot_when_alltoCL_kg_perpix > 0, 1, NA) |> plot()
global(r_crop_prot_when_alltoCL_kg_perpix, "sum", na.rm=T)/1e9 # 923.93 mmt protein
# ! Note that only 70 MMT comes outside existing cl areas!!
################################################################## KCAL
# All to GL
r_agb_kcal_when_alltoGL_MM_perpix <-
r_kcal_from_AGB_MM_perha_gaez_mean_existing_plus_newareas *
cellSize(template_rast_5arcmin, unit = "ha") *
r_fraction_gl_cl_total_0toNA
global(r_agb_kcal_when_alltoGL_MM_perpix*1e6, "sum", na.rm=T)/1e12 # 148.7 trillion kcal (36% larger than existing, which is 109)
# All to CL
r_crop_kcal_when_alltoCL_MM_perpix <-
r_crop_kcal_existing_plus_new_areas_MM_ha *
cellSize(r_crop_kcal_existing_plus_new_areas_MM_ha, unit = "ha") *
r_fraction_gl_cl_total_0toNA
global(r_crop_kcal_when_alltoCL_MM_perpix*1e6, "sum", na.rm=T)/1e12 # 19310 trillion kcal
# Protein
protein_change_AlltoCL <-
classify(r_crop_prot_when_alltoCL_kg_perpix, cbind(NA,0)) /
r_protein_combined_kg_perpix
# KCAL
kcal_change_AlltoCL <-
classify(r_crop_kcal_when_alltoCL_MM_perpix, cbind(NA,0))/
r_energy_combined_MM_perpix
# Plot
# protein
create_index_map(r_index = protein_change_AlltoCL,
tocrs = "ESRI:54030",
index_main_title = "Protein change in %",
index_label = "[%]",
colorpal = pal_LUR_change_percent,
colorNA = "NA",
breakvals = c(-Inf, no_pot, med_pot, high_pot, Inf),
breaknames = c())
# energy
create_index_map(r_index = kcal_change_AlltoCL,
tocrs = "ESRI:54030",
index_main_title = "Energy change in %",
index_label = "[%]",
colorpal = pal_LUR_change_percent,
colorNA = "NA",
breakvals = c(-Inf, no_pot, med_pot, high_pot, Inf),
breaknames = c())
# protein
protein_change_AlltoGL <-
classify(r_agb_prot_when_alltoGL_kg_perpix, cbind(NA,0))  /
r_protein_combined_kg_perpix
summary(protein_change_AlltoGL)
# energy
kcal_change_AlltoGL <-
classify(r_agb_kcal_when_alltoGL_MM_perpix, cbind(NA,0)) /
r_energy_combined_MM_perpix
# Plot
# protein
create_index_map(r_index = protein_change_AlltoGL,
tocrs = "ESRI:54030",
index_main_title = "Protein change in %",
index_label = "[%]",
colorpal = pal_LUR_change_percent,
colorNA = "NA",
breakvals = c(-Inf, no_pot, med_pot, high_pot, Inf),
breaknames = c())
# energy
create_index_map(r_index = kcal_change_AlltoGL,
tocrs = "ESRI:54030",
index_main_title = "Energy change in %",
index_label = "[%]",
colorpal = pal_LUR_change_percent,
colorNA = "NA",
breakvals = c(-Inf, no_pot, med_pot, high_pot, Inf),
breaknames = c())
# TEST -- how much the protein production changes in AlltoGL scenario
create_index_map(r_index = protein_change_AlltoGL,
tocrs = "ESRI:54030",
index_main_title = "Protein change in % in AlltoGL TEST",
index_label = "[%]",
colorpal = pal_LUR_change_percent,
colorNA = "NA",
breakvals = c(-Inf,1, 1.01, 1.3, Inf),
breaknames = c())
r_comparison_protein <-
ifel(
classify(r_crop_prot_when_alltoCL_kg_perpix, cbind(NA,0)) >
classify(r_agb_prot_when_alltoGL_kg_perpix, cbind(NA,0)), # if CL > GL,
r_crop_prot_when_alltoCL_kg_perpix, # use CL,
r_agb_prot_when_alltoGL_kg_perpix) # Otherwise GL
global(r_comparison_protein, "sum", na.rm=T)/1e9 # 926 mmt protein --> the largest amount!
## Find areas where GL produces more protein than CL
r_GL_larger <-
ifel(classify(r_agb_prot_when_alltoGL_kg_perpix, cbind(NA,0)) >
classify(r_crop_prot_when_alltoCL_kg_perpix, cbind(NA,0)), # if GL > CL,
1, # ,gets value
NA) # Otherwise no value
plot(r_GL_larger, main = "GL mostly larger where SI<1. Some pixels also elsewhere")
############### KCAL
r_comparison_energy <-
ifel(
classify(r_crop_kcal_when_alltoCL_MM_perpix, cbind(NA,0)) >
classify(r_agb_kcal_when_alltoGL_MM_perpix, cbind(NA,0)), # if CL > GL,
r_crop_kcal_when_alltoCL_MM_perpix, # use CL,
r_agb_kcal_when_alltoGL_MM_perpix) # Otherwise GL
global(r_comparison_energy*1e6, "sum", na.rm=T)/1e12 # 19338 trillion kcal --> the largest amount!
# All to CL
protein_change_AlltoCL
kcal_change_AlltoCL
# possibility to change the classes
ifel(protein_change_AlltoCL > 10, 10, protein_change_AlltoCL) |> hist()
# Recode
rcl_AlltoCL_protein_recoding <-
c(-Inf, no_pot, -555, # no
no_pot, med_pot, 1, # mod
med_pot, high_pot, 777, # high
high_pot, Inf, 10000) %>% # very high
matrix(., ncol=3, byrow = T)
protein_change_AlltoCL_recoded <-
classify(protein_change_AlltoCL,
rcl_AlltoCL_protein_recoding,
right = FALSE,
# FALSE: 2 is not included in the first class [-Inf, 2[
include.lowest = TRUE)
# TRUE: 2 is included in the sec class [2, 5[
# For kcal it is enough if production increases at all (more 1.0*present yield)
rcl_AlltoCL_kcal_recoding <-
c(-Inf, 1, -555, # not increasing
1, Inf, 10000) %>% # increasing
matrix(., ncol=3, byrow = T)
kcal_change_AlltoCL_recoded <-
classify(kcal_change_AlltoCL,
rcl_AlltoCL_kcal_recoding,
right = FALSE,
include.lowest = TRUE)
protein_change_AlltoCL_recoded |> values() |> hist(breaks = 30)
kcal_change_AlltoCL_recoded |> values() |> hist(breaks = 30)
plot(protein_change_AlltoCL_recoded, col = pal_categories )
plot(kcal_change_AlltoCL_recoded, col = pal_categories)
# ---------------------------------------------------------------- Combine recoded rasters to see where both protein and kcal increases
protein_and_kcal_AlltoCL_recoded <-
protein_change_AlltoCL_recoded +
kcal_change_AlltoCL_recoded # maybe classify not necessary
# ifel(protein_and_kcal_AlltoCL_recoded != 0,
#      NA,
#      protein_and_kcal_AlltoCL_recoded) |> plot() # what are these? Some AlltoCL areas where there was no values? --> occur when used classify
protein_and_kcal_AlltoCL_recoded |> plot()
protein_and_kcal_AlltoCL_recoded |>  unique()
# -1110
#  -554
#   222
#  9445
# 10001
# 10777
# 20000
rcl_recode_protein_and_kcal <- matrix(c(
-1110, -555, # -555 + (-555) --> no pot  & no inc = no potential
-554, -555, # -555 + 1 --> no inc & mod pot = no potential
222, -555, # 777 + (-555) --> high pot & no inc = no potential
9445, -555, # 10000 + (-555) --> very high pot & no inc = no potential
10001, 1, # 10000 + 1 --> inc & mod pot = mod pot
10777, 777, # 10000 + 777 --> inc & high pot = high pot
20000, 10000), # 10000 + 10000 --> inc & very high pot = very high pot
ncol = 2, byrow = TRUE)
rcl_recode_protein_and_kcal
protein_and_kcal_AlltoCL_recoded_fixed <-
classify(protein_and_kcal_AlltoCL_recoded,
rcl_recode_protein_and_kcal)
unique(protein_and_kcal_AlltoCL_recoded_fixed) # ok!
# plot
plot(protein_and_kcal_AlltoCL_recoded_fixed,
col = pal_categories) # GOOD!
rcl_AlltoGL_recoding <-
matrix(
c(-Inf, no_pot, 5, # no pot
no_pot, med_pot, 7, # mod
med_pot, high_pot, 11, # high
high_pot, Inf, 13), # very high
ncol=3, byrow = T)
ifel(protein_change_AlltoGL > no_pot, 100, protein_change_AlltoGL) |> hist()
# Interpretation:
# AlltoGL ei tuota merkittävästi lisää protskua juuri missään. Miksi?
# V: koska nykyinen grazing potential on jo laskettu AGB perusteella, eikä AGB sato pikselissä useinkaan kaksinkertaistu vaikka kaikki viljapellot muunnettaisiin laidunmaaksi.
protein_change_AlltoGL_recoded <-
classify(protein_change_AlltoGL,
rcl_AlltoGL_recoding,
right = FALSE,
include.lowest = TRUE)
kcal_change_AlltoGL_recoded <-
classify(kcal_change_AlltoGL,
rcl_AlltoCL_kcal_recoding, # same with CL
right = FALSE,
include.lowest = TRUE)
# Combine
protein_and_kcal_AlltoGL_recoded <-
protein_change_AlltoGL_recoded +
kcal_change_AlltoGL_recoded
protein_and_kcal_AlltoGL_recoded |> plot(col = pal_categories)
protein_and_kcal_AlltoGL_recoded |> unique()
# recode again - use different rcl than for crops
# choose worst option here:
rcl_recode_protein_and_kcal_GL <- matrix(c(
-550, 5, # -555 + 5 --> no inc  & no pot = no pot
-548, 5, # -555 + 7 --> no inc & mod pot = no pot
-544, 5, # -555 + 11 --> no inc & high pot = no pot
10005, 5, # 10000 + 5 --> inc & no pot = no pot
10007, 7, # 10000 + 7 --> inc & mod pot = mod pot
10011, 11, # 10000 + 11 --> inc & high pot = high pot
10013, 13), # 10000 + 13 --> inc & very high pot = very high pot
ncol = 2, byrow = TRUE)
# classify
protein_and_kcal_AlltoGL_recoded_fixed <-
classify(protein_and_kcal_AlltoGL_recoded,
rcl_recode_protein_and_kcal_GL)
unique(protein_and_kcal_AlltoGL_recoded_fixed) # ok!
# plot
hist(protein_and_kcal_AlltoGL_recoded_fixed,
breaks = 30, maxcell = 1e7,
main = "Mostly no pot")
plot(protein_and_kcal_AlltoGL_recoded_fixed,
col = pal_categories, main = "mostly no pot") # GOOD!
# plot where value is 13 (otherwise NA)
ifel(protein_and_kcal_AlltoGL_recoded_fixed == 13,
protein_and_kcal_AlltoGL_recoded_fixed, NA) |> plot()
ifel(protein_and_kcal_AlltoGL_recoded_fixed == 13,
protein_and_kcal_AlltoGL_recoded_fixed, NA) |>
global("sum", na.rm=T) # 2392 pixels
plot(r_nutrient_yield_change_between_existing_to_AlltoGL_recoded_sum_gte21)
plot(r_nutrient_yield_change_between_existing_to_AlltoCL_recoded_sum_gte21)
# All to CL
protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing <-
mask(protein_and_kcal_AlltoCL_recoded_fixed,
r_nutrient_yield_change_between_existing_to_AlltoCL_recoded_sum_gte21)
# All to GL
protein_and_kcal_AlltoGL_recoded_fixed_21nutrients_not_decreasing <-
mask(protein_and_kcal_AlltoGL_recoded_fixed,
r_nutrient_yield_change_between_existing_to_AlltoGL_recoded_sum_gte21)
# plot
plot(protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing,
col = pal_categories, main = "Prot and kcal and 21/27 - AlltoCL")
plot(protein_and_kcal_AlltoGL_recoded_fixed_21nutrients_not_decreasing,
col = pal_categories, main = "Prot and kcal and 21/27 - AlltoGL")
pal_categories <-
c("#A6CEE3", "#C0A2C7", "#B2DF8A", "#FFA500")#
breaknames_updated <- c("No potential",
"Moderate potential",
"High potential",
"Very high potential")
# Without nutrients
hist(protein_and_kcal_AlltoCL_recoded_fixed,
breaks = 30, maxcell = 1e7,
main = "In AlltoCL there're many 'no potential' regions ")
hist(protein_and_kcal_AlltoGL_recoded_fixed,
breaks = 30, maxcell = 1e7,
main = "In AlltoGL there're many 'no potential' regions ")
(plt_protein_and_kcal_AlltoCL_recoded_fixed <-
create_index_map(r_index = protein_and_kcal_AlltoCL_recoded_fixed,
tocrs = "ESRI:54030",
index_main_title = "Existing vs 'All to CL' - no nutr considered",
index_label = "",
colorpal = pal_categories,
breakvals = c(-Inf, -554, 2, 778, Inf),
breaknames = breaknames_updated))
(plt_protein_and_kcal_AlltoGL_recoded_fixed <-
create_index_map(r_index = protein_and_kcal_AlltoGL_recoded_fixed,
tocrs = "ESRI:54030",
index_main_title = "Existing vs 'All to GL' - no nutr considered",
index_label = "",
colorpal = pal_categories,
breakvals = c(-Inf, 6, 8, 12, Inf),
breaknames = breaknames_updated))
# Nutrients not decreasing considered
hist(protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing,
breaks = 30, maxcell = 1e7,
main = "In AlltoCL there're many 'no potential' regions ")
hist(protein_and_kcal_AlltoGL_recoded_fixed_21nutrients_not_decreasing,
breaks = 30, maxcell = 1e7,
main = "In AlltoGL there're many 'no potential' regions ")
# All to CL
(plt_AlltoCL_plus21nutrients_not_decreasing <-
create_index_map(r_index = protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing,
tocrs = "ESRI:54030",
index_main_title = "Existing vs 'All to CL' - 21/27 nutr not decr",
index_label = "",
colorpal = pal_categories,
breakvals = c(-Inf, -554, 2, 778, Inf),
breaknames = breaknames_updated))
# All to GL
(plt_AlltoGL_plus21nutrients_not_decreasing <-
create_index_map(r_index = protein_and_kcal_AlltoGL_recoded_fixed_21nutrients_not_decreasing,
tocrs = "ESRI:54030",
index_main_title = "Existing vs 'All to GL' - 21/27 nutr not decr",
index_label = "",
colorpal = pal_categories,
breakvals = c(-Inf, 6, 8, 12, Inf),
breaknames = breaknames_updated))
# Combine (note 21/27 mask)
AlltoCL_AlltoGL_combined_nutrients_considered <-
classify(
protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing,
cbind(NA, 0)) +
classify(
protein_and_kcal_AlltoGL_recoded_fixed_21nutrients_not_decreasing,
cbind(NA, 0))
AlltoCL_AlltoGL_combined_nutrients_considered <-
mask(AlltoCL_AlltoGL_combined_nutrients_considered,
r_fraction_gl_cl_total_0toNA)
unique(AlltoCL_AlltoGL_combined_nutrients_considered)# Number 0 there as there are many pixels where only some of potential land usage exist (e.g. value = 0 in All to CL scenario in Tibet when we use classify)
plot(classify(protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing,
cbind(NA, 0))) # Tästä näkyy 0 alueet!
# Get unique combinations
raster1_values <-
protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing |>
unique() |> pull()
raster2_values <-
protein_and_kcal_AlltoGL_recoded_fixed_21nutrients_not_decreasing |>
unique() |> pull()
raster1_values <- c(raster1_values, 0) # added 0
raster2_values <- c(raster2_values, 0) #
unique_combinations <-
expand.grid(
raster1 = raster1_values,
raster2 = raster2_values)
unique_combinations <- unique_combinations |>
mutate(sum = rowSums(unique_combinations))
# Suodatetaan vain ne rivit, joiden summa löytyy halutuista summista
unique_combinations <- unique_combinations %>%
filter(sum %in% pull(unique(AlltoCL_AlltoGL_combined_nutrients_considered))) # Works!
# Recode --> tarvitaan vain no potential alueet ja mod/high&very high increase mutta pitää tietää mistä tuotantomuodosta saavutetaan esim high increase
unique_combinations$sum
#  -550     6   782 10005     5
#     7    11    13  -555     1
# 777 10000     0
# Määritellään uusi reclassification matriisi --> huom: -555 = no potential (ei nyt väliä onko CL vai GL)
# valitaan korkein tuotanto
rcl_recode_combined <- matrix(c(
-555, -555, # -555+0, no pot AlltoCL = no pot
-550, -555,  # -555+5, no pot AlltoCL & no pot AlltoGL = no pot
1, 1, # 1+0, mod pot AlltoCL = mod pot AlltoCL
5, -555, # 5+0, no pot AlltoGL = no pot
6, 1,  # 1+5, mod pot AlltoCL & no pot AlltoGL = mod pot AlltoCL
7, 7, # 7+0, mod pot AlltoGL = mod pot AlltoGL
11, 11, # 11+0, high AlltoGL = high AlltoGL
13, 13, # 13+0, very high AlltoGL = very high AlltoGL
777, 777, # 777+0, high AlltoCL = high AlltoCL
782, 777, # 777+5, high AlltoCL & no pot AlltoGL = high AlltoCL
10000, 10000, # 10000+0, very high AlltoCL = very high AlltoCL
10005, 10000, # 10000+5, very high AlltoCL & no pot AlltoGL = very high AlltoCL
0, -555), # Potentially no pot AlltoCL & no pot AlltoGL = no pot
ncol = 2,
byrow = TRUE)
rcl_recode_combined
# classify
AlltoCL_AlltoGL_combined_nutrients_considered_recode <-
classify(AlltoCL_AlltoGL_combined_nutrients_considered,
rcl_recode_combined)
unique(AlltoCL_AlltoGL_combined_nutrients_considered_recode) # 7 values
# Plot
plot(AlltoCL_AlltoGL_combined_nutrients_considered_recode,
col = c("yellow","green","red","black", "purple"))
# Interpretation: Values 13 must be derived from GL raster, other values from CL raster
#
r_13 <-
ifel(AlltoCL_AlltoGL_combined_nutrients_considered_recode == 13, 1, NA)
plot(r_13) # very fex pixels!
global(r_13, "sum", na.rm=T) # 183 pixels anymore
# how many AlltoGL pixels?
ifel(AlltoCL_AlltoGL_combined_nutrients_considered_recode %in% c(7,11,13),
1, NA) |> global("sum", na.rm=T) # 196 pixels
ifel(AlltoCL_AlltoGL_combined_nutrients_considered_recode %in% c(-555, 1,777,10000),
1, NA) |> global("sum", na.rm=T) # 599804	 pixels in AlltoCL, 1.4M total
pal_npp <- scico(n = 5,begin = 0.6, end = 1, palette = "corkO")
pal_agb <- scico(n = 6, palette = "bamako", direction = -1)
pal_protein_lajolla <- scico(n = 6, palette = "lajolla", begin = 0.15, end = 1, direction = -1)
pal_share_nuuk <- scico(n = 7, palette = "nuuk",  direction = -1)
pal_share <-  scico(n = 6, palette = "roma", begin = 0.1, end = 0.9, direction = -1)
pal_fcr <- scico(n = 6, palette = "tokyo", direction = -1)
pal_fcr <-c("#C6DBEF", "#6BAED6", "#4292C6", "#2171B5", "#08519C", "#08306B") # maybe more clear
pal_lur <- scico(n =4, palette = "imola", direction = -1)
pal_cv <-  scico(n = 6, palette = "nuuk", direction = -1)
# test
pal_protein_test <-
c("#66c2a5", "#a6d854", "#fee08b", "#fdae61", "#f46d43", "#d53e4f")
# function for plotting -- raster downsample = F
create_index_map <- function(r_index, index_label,index_main_title,
colorpal, breakvals,
breaknames = NULL,
color_midpoint = NULL, tocrs = NA, colorNA = NULL){
if (!is.na(tocrs)){
r_index <- project(r_index, tocrs, mask = TRUE)
}
index_map <- tm_shape(r_index,
raster.downsample = FALSE) + ###### or 0 instead?
tm_raster(palette = colorpal, # try style = "fixed",
breaks = breakvals,
labels = breaknames,
title = index_label,
midpoint = color_midpoint,
colorNA = colorNA,
legend.is.portrait = FALSE) + # added 9.8.22
#  legend.reverse = TRUE) + # deleted 9.8.22
tm_layout(main.title = index_main_title,
main.title.position = "center",
main.title.size = 1,
legend.bg.color = TRUE,
legend.outside = TRUE,
legend.title.size = 1,
legend.text.size = 1,
legend.outside.size = 0.2,
legend.outside.position = "bottom", # added 9,8
frame = FALSE)+
tm_shape(adm10_simple_faoadded_rob) + # was reg_rob_simple
tm_borders(col = NA,  lwd = 0.33)  # lwd was 0.33, col was "grey30",
return (index_map)
}
f_save_pngs_extended_figs <- function(i, fig_folder) {
# Create the directory if it doesn't exist
if (!dir.exists(here("Extended_data_and_figs", "extended_figs", fig_folder))) {
dir.create(here("Extended_data_and_figs", "extended_figs", fig_folder), recursive = TRUE)
}
# Generate the plot and save it
p_fig <- layers[[i]] + tm_layout(legend.show = FALSE)
tmap_save(p_fig,
filename = here("Extended_data_and_figs", "extended_figs", fig_folder, paste0('Extfig_', nameLayers[i], '.png')),
width = 110, units = 'mm', dpi = 450)
}
plot(r_nutrient_yield_change_between_existing_to_AlltoGL_recoded_sum_gte21)
plot(r_nutrient_yield_change_between_existing_to_AlltoCL_recoded_sum_gte21)
test <-
classify(r_nutrient_yield_change_between_existing_to_AlltoGL_recoded_sum_gte21, cbind(NA,0)) +
classify(r_nutrient_yield_change_between_existing_to_AlltoCL_recoded_sum_gte21, cbind(NA,0))
plot(test, main = "Areas where 21 out of 27 nutrients remain stable or increase after land use change")
breaknames_updated <- c("No potential",
"Moderate potential",
"High potential",
"Very high potential")
pal_AlltoCL <- c("#e0e0e0", "#9CE2D5", "#6DCBD6", "#3B567A")
pal_AlltoGL <- c("#e0e0e0", "#eae8a4", "#eac324", "#cc6633")
# All to CL
(plt_AlltoCL_plus21nutrients_not_decreasing <-
create_index_map(r_index = protein_and_kcal_AlltoCL_recoded_fixed_21nutrients_not_decreasing,
tocrs = "ESRI:54030",
index_main_title = "", # Land use shifts for increased protein and energy under scenario 'All to cropland' (All to CL), while maintaining nutrient balance
index_label = "",
colorpal = pal_AlltoCL,
breakvals = c(-Inf, -554, 2, 778, Inf),
breaknames = breaknames_updated))
# All to GL
(plt_AlltoGL_plus21nutrients_not_decreasing <-
create_index_map(r_index = protein_and_kcal_AlltoGL_recoded_fixed_21nutrients_not_decreasing,
tocrs = "ESRI:54030",
index_main_title = "", # Land use shifts for increased protein and energy under scenario 'All to grazing land' (All to GL), while maintaining nutrient balance
index_label = "",
colorpal = pal_AlltoGL,
breakvals = c(-Inf, 6, 8, 12, Inf),
breaknames = breaknames_updated))
# Priority conservation regions (now in 11_reality_check_map)
r_areas_where_conversion_not_realistic_combined_5arcmin_NAto0 <-
ifel(is.na(r_areas_where_conversion_not_realistic_combined_5arcmin),
0,
r_areas_where_conversion_not_realistic_combined_5arcmin) |>
mask(r_fraction_gl_cl_total_0toNA)
(plt_priority_conservation_areas <-
create_index_map(r_index = r_areas_where_conversion_not_realistic_combined_5arcmin_NAto0,
tocrs = "ESRI:54030",
index_main_title = "", #Conservation priority regions within our study area
index_label = "",
colorpal = c("#3B567A", "#e0e0e0"), # option c("#436D81", "#FEFEB2"),
breakvals =  c(-Inf, 0.1, Inf ),
breaknames = c("Other areas", "Priority area")))
# Combine plots
plts_ext_data_fig_3 <-
tmap_arrange(
plt_AlltoCL_plus21nutrients_not_decreasing,
plt_AlltoGL_plus21nutrients_not_decreasing,
plt_priority_conservation_areas,
ncol = 3
)
tmap_save(plts_ext_data_fig_3,
here("Extended_data_and_figs", "extended_figs", "Extended Data Fig 3.pdf"))
# Link to Illustrator
layers <- list(
plt_AlltoCL_plus21nutrients_not_decreasing,
plt_AlltoGL_plus21nutrients_not_decreasing,
plt_priority_conservation_areas
)
nameLayers <- c(
"AlltoCL_plus21nutrients_not_decreasing",
"AlltoGL_plus21nutrients_not_decreasing",
"priority_conservation_areas"
)
map(1:length(layers), ~f_save_pngs_extended_figs(.x, "Ext_Fig3"))
